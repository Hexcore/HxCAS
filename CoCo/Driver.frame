/*-------------------------------------------------------------------------
XXX.java -- the generic Compiler Driver
Compiler Generator Coco/R,
Copyright (c) 1990, 2004 Hanspeter Moessenboeck, University of Linz
extended by M. Loeberbauer & A. Woess, Univ. of Linz
ported from C# to Java by Wolfgang Ahorner
extended (June 2004) by Pat Terry, Rhodes University (p.terry@ru.ac.za)
(changes marked as "pdt")

This program is free software; you can redistribute it and/or modify it
under the terms of the GNU General Public License as published by the
Free Software Foundation; either version 2, or (at your option) any
later version.

This program is distributed in the hope that it will be useful, but
WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
for more details.

You should have received a copy of the GNU General Public License along
with this program; if not, write to the Free Software Foundation, Inc.,
59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.

As an exception, it is allowed to write an extension of Coco/R that is
used as a plugin in non-free software.

If not otherwise stated, any source code generated by Coco/R (other than
Coco/R itself) does not fall under the GNU General Public License.
-------------------------------------------------------------------------*/
-->begin
/* Generic driver frame file for Coco/R for Java
   PDT  30 April 2003 (p.terry@ru.ac.za)
   Modify this to suit your own purposes - hints are given below! */

public class -->class {

	public static void main (String[] args) {
		boolean mergeErrors = false;
		String inputName = null;

		// ------------------------ you may need to process command line parameters:

		for (int i = 0; i < args.length; i++) {
			if (args[i].toLowerCase().equals("-l")) mergeErrors = true;
			else inputName = args[i];
		}
		if (inputName == null) {
			System.err.println("No input file specified");
			System.exit(1);
		}

		int pos = inputName.lastIndexOf('/');
		if (pos < 0) pos = inputName.lastIndexOf('\\');
		String dir = inputName.substring(0, pos+1);

		Scanner.Init(inputName);
		Errors.Init(inputName, dir, mergeErrors);
		//  ----------------------- add other initialization if required:
		Parser.Parse();
		Errors.Summarize();
		//  ----------------------- add other finalization if required:
	}

} // end driver
$$$
